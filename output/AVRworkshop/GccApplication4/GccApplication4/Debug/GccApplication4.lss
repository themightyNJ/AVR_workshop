
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000f0  00000164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000164  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000830  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000047d  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000118  00000000  00000000  00000db5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000036e  00000000  00000000  00000ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000115  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 76 00 	jmp	0xec	; 0xec <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <util/delay.h>

int main(void)
{
	
	DDRC=0X01;
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	84 bb       	out	0x14, r24	; 20
    while(1)
    {
        PORTC=0b00000001;
  96:	91 e0       	ldi	r25, 0x01	; 1
		_delay_ms(1000);
		PORTC = 0b00000000;
		_delay_ms(1000);
		PORTC = 0b00000010;
  98:	82 e0       	ldi	r24, 0x02	; 2
{
	
	DDRC=0X01;
    while(1)
    {
        PORTC=0b00000001;
  9a:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	2f e3       	ldi	r18, 0x3F	; 63
  9e:	3d e0       	ldi	r19, 0x0D	; 13
  a0:	43 e0       	ldi	r20, 0x03	; 3
  a2:	21 50       	subi	r18, 0x01	; 1
  a4:	30 40       	sbci	r19, 0x00	; 0
  a6:	40 40       	sbci	r20, 0x00	; 0
  a8:	e1 f7       	brne	.-8      	; 0xa2 <main+0x10>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x1a>
  ac:	00 00       	nop
		_delay_ms(1000);
		PORTC = 0b00000000;
  ae:	15 ba       	out	0x15, r1	; 21
  b0:	2f e3       	ldi	r18, 0x3F	; 63
  b2:	3d e0       	ldi	r19, 0x0D	; 13
  b4:	43 e0       	ldi	r20, 0x03	; 3
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	30 40       	sbci	r19, 0x00	; 0
  ba:	40 40       	sbci	r20, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x24>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x2e>
  c0:	00 00       	nop
		_delay_ms(1000);
		PORTC = 0b00000010;
  c2:	85 bb       	out	0x15, r24	; 21
  c4:	2f e3       	ldi	r18, 0x3F	; 63
  c6:	3d e0       	ldi	r19, 0x0D	; 13
  c8:	43 e0       	ldi	r20, 0x03	; 3
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	30 40       	sbci	r19, 0x00	; 0
  ce:	40 40       	sbci	r20, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x38>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x42>
  d4:	00 00       	nop
		_delay_ms(1000);
		PORTC = 0b00000000;
  d6:	15 ba       	out	0x15, r1	; 21
  d8:	2f e3       	ldi	r18, 0x3F	; 63
  da:	3d e0       	ldi	r19, 0x0D	; 13
  dc:	43 e0       	ldi	r20, 0x03	; 3
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	30 40       	sbci	r19, 0x00	; 0
  e2:	40 40       	sbci	r20, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <main+0x4c>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x56>
  e8:	00 00       	nop
  ea:	d7 cf       	rjmp	.-82     	; 0x9a <main+0x8>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>
